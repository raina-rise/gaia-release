import{_ as a,c as t,o as l,ag as r}from"./chunks/framework.Dx5c5edu.js";const u=JSON.parse('{"title":"解决的问题","description":"","frontmatter":{},"headers":[],"relativePath":"guide/client-problem-solved.md","filePath":"guide/client-problem-solved.md"}'),o={name:"guide/client-problem-solved.md"};function i(n,e,s,d,_,c){return l(),t("div",null,e[0]||(e[0]=[r('<h1 id="解决的问题" tabindex="-1">解决的问题 <a class="header-anchor" href="#解决的问题" aria-label="Permalink to &quot;解决的问题&quot;">​</a></h1><h2 id="_1-解决大图加载的性能问题" tabindex="-1">1. 解决大图加载的性能问题 <a class="header-anchor" href="#_1-解决大图加载的性能问题" aria-label="Permalink to &quot;1. 解决大图加载的性能问题&quot;">​</a></h2><ul><li><strong>问题</strong>：直接加载超大分辨率的图片（如卫星地图、医学影像、CAD 图纸）会占用大量内存，导致浏览器卡顿或崩溃。</li><li><strong>解决方案</strong>：将大图切分成小块（tiles），按需加载需要的部分，而不是一次性加载整张图。 这样可以减少首次渲染时间，并且可以渐进式加载高清内容。</li></ul><h2 id="_2-解决缩放时的清晰度问题" tabindex="-1">2. 解决缩放时的清晰度问题 <a class="header-anchor" href="#_2-解决缩放时的清晰度问题" aria-label="Permalink to &quot;2. 解决缩放时的清晰度问题&quot;">​</a></h2><ul><li><strong>问题</strong>：直接对大图进行缩放，会出现模糊、锯齿或卡顿，影响视觉体验。</li><li><strong>解决方案</strong>：采用不同分辨率的瓦片图（多级金字塔结构）：缩小时用低分辨率的瓦片，提高性能；放大时；高分辨率的瓦片，保证清晰度；这样可以实现无损缩放，避免直接缩放大图导致的失真或卡顿。</li></ul><h2 id="_3-解决滚动与视口优化问题" tabindex="-1">3. 解决滚动与视口优化问题 <a class="header-anchor" href="#_3-解决滚动与视口优化问题" aria-label="Permalink to &quot;3. 解决滚动与视口优化问题&quot;">​</a></h2><ul><li><strong>问题</strong>：直接加载整张大图，在平移（拖动）或缩放时会导致严重的重绘、掉帧或卡顿。</li><li><strong>解决方案</strong>：只加载当前视口范围内的瓦片，超出视口的部分不渲染，避免不必要的计算。</li></ul>',7)]))}const g=a(o,[["render",i]]);export{u as __pageData,g as default};
